<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Liam&#39;s Graphics Blog</title>
    <link>https://liamtyler.github.io/posts/</link>
    <description>Recent content in Posts on Liam&#39;s Graphics Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://liamtyler.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analyzing Octahedral Encoded Normals</title>
      <link>https://liamtyler.github.io/posts/octahedral_analysis/</link>
      <pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://liamtyler.github.io/posts/octahedral_analysis/</guid>
      <description>Octahedron encoding for normals is very popular, but most people only scratch the surface. Let&amp;#39;s dive into some cool extensions of it and analyze its error.</description>
    </item>
    <item>
      <title>Basic Meshlet Compression</title>
      <link>https://liamtyler.github.io/posts/meshlet_compression/</link>
      <pubDate>Fri, 20 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://liamtyler.github.io/posts/meshlet_compression/</guid>
      <description>Meshlets and mesh shaders are super popular now, but how should you optimize and compress that data? Let&amp;#39;s walkthrough concretely how to do it in C&#43;&#43;.</description>
    </item>
    <item>
      <title>A Poor Man&#39;s Render Graph</title>
      <link>https://liamtyler.github.io/posts/task_graph/</link>
      <pubDate>Sat, 27 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://liamtyler.github.io/posts/task_graph/</guid>
      <description>Implementing a render graph doesn&amp;#39;t need to be daunting. Here&amp;#39;s a full walkthrough of my at-home render graph, with all the code included.</description>
    </item>
    <item>
      <title>Implementing an Asset Pipeline Part 1</title>
      <link>https://liamtyler.github.io/posts/asset_pipeline_part_1/</link>
      <pubDate>Sun, 07 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://liamtyler.github.io/posts/asset_pipeline_part_1/</guid>
      <description>Even for personal projects, serialized asset pipelines are incredibly helpful, but not talked about often. I&amp;#39;ll walkthrough my asset pipeline with all of the C&#43;&#43; code.</description>
    </item>
    <item>
      <title>Normal Map To Height Map Generation</title>
      <link>https://liamtyler.github.io/posts/normal-to-height/</link>
      <pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://liamtyler.github.io/posts/normal-to-height/</guid>
      <description>Full walkthrough of how to generate a height map (displacement map) from a normal map in C&#43;&#43;, using a method presented in Siggraph 2018.</description>
    </item>
  </channel>
</rss>
